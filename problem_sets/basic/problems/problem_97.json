{
	"identifier": "problem_97",
	"description": "Find the contiguous subarray (containing at least one number) which has the largest sum.",
	"function_prototype": {
		"function_name": "maxSubArray",
		"parameters": [{"name": "nums", "type": "List[int]"}],
		"return_values": [{"type": "int"}]
	},
	"correctness_test_suite": [
		{"input": {"nums": [-2, 1, -3, 4, -1, 2, 1, -5, 4]}, "expected_output": 6},
		{"input": {"nums": [1]}, "expected_output": 1},
		{"input": {"nums": [5, 4, -1, 7, 8]}, "expected_output": 23}
	],
	"tags": ["Array", "Medium", "Kadane's algorithm"],
	"prompts": [
		{
			"prompt_id": "brief_prompt",			
			"prompt": "Implement a function to find the maximum subarray sum.",
			"genericize": false,
			"sample_inputs_outputs": [
				{"input": {"nums": [-2, 1, -3, 4, -1, 2, 1, -5, 4]}, "expected_output": 6},
				{"input": {"nums": [1]}, "expected_output": 1}
			]
		},
		{
			"prompt_id": "detailed_prompt",
			"prompt": "Write a function named 'maxSubArray' that takes a list of integers 'nums' and returns the maximum sum of a contiguous subarray (must contain at least one number).",
			"genericize": true,
			"sample_inputs_outputs": [
				{"input": {"nums": [-2, 1, -3, 4, -1, 2, 1, -5, 4]}, "expected_output": 6},
				{"input": {"nums": [1]}, "expected_output": 1}
			]
		}
	]
}